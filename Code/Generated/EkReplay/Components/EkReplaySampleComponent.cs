namespace EchKode.PBMods.DamagePopups.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkReplayContext
	{
		public EkReplayEntity sampleEntity { get { return GetGroup(EkReplayMatcher.Sample).GetSingleEntity(); } }
		public Sample sample { get { return sampleEntity.sample; } }
		public bool hasSample { get { return sampleEntity != null; } }

		public EkReplayEntity SetSample(int newTurn, float newTimeInTurn, bool newIsTimeStep, int newIndex)
		{
			if (hasSample)
			{
				throw new Entitas.EntitasException("Could not set Sample!\n" + this + " already has an entity with Sample!",
					"You should check if the context already has a sampleEntity before setting it or use context.ReplaceSample().");
			}
			var entity = CreateEntity();
			entity.AddSample(newTurn, newTimeInTurn, newIsTimeStep, newIndex);
			return entity;
		}

		public void ReplaceSample(int newTurn, float newTimeInTurn, bool newIsTimeStep, int newIndex)
		{
			var entity = sampleEntity;
			if (entity == null)
			{
				entity = SetSample(newTurn, newTimeInTurn, newIsTimeStep, newIndex);
			}
			else
			{
				entity.ReplaceSample(newTurn, newTimeInTurn, newIsTimeStep, newIndex);
			}
		}

		public void RemoveSample()
		{
			sampleEntity.Destroy();
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkReplayEntity
	{

		public Sample sample { get { return (Sample)GetComponent(EkReplayComponentsLookup.Sample); } }
		public bool hasSample { get { return HasComponent(EkReplayComponentsLookup.Sample); } }

		public void AddSample(int newTurn, float newTimeInTurn, bool newIsTimeStep, int newIndex)
		{
			var index = EkReplayComponentsLookup.Sample;
			var component = (Sample)CreateComponent(index, typeof(Sample));
			component.turn = newTurn;
			component.timeInTurn = newTimeInTurn;
			component.isTimeStep = newIsTimeStep;
			component.index = newIndex;
			AddComponent(index, component);
		}

		public void ReplaceSample(int newTurn, float newTimeInTurn, bool newIsTimeStep, int newIndex)
		{
			var index = EkReplayComponentsLookup.Sample;
			var component = (Sample)CreateComponent(index, typeof(Sample));
			component.turn = newTurn;
			component.timeInTurn = newTimeInTurn;
			component.isTimeStep = newIsTimeStep;
			component.index = newIndex;
			ReplaceComponent(index, component);
		}

		public void RemoveSample()
		{
			RemoveComponent(EkReplayComponentsLookup.Sample);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkReplayMatcher
	{
		static Entitas.IMatcher<EkReplayEntity> _matcherSample;

		public static Entitas.IMatcher<EkReplayEntity> Sample
		{
			get
			{
				if (_matcherSample == null)
				{
					var matcher = (Entitas.Matcher<EkReplayEntity>)Entitas.Matcher<EkReplayEntity>.AllOf(EkReplayComponentsLookup.Sample);
					matcher.componentNames = EkReplayComponentsLookup.componentNames;
					_matcherSample = matcher;
				}

				return _matcherSample;
			}
		}
	}
}
