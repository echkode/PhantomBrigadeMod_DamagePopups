namespace EchKode.PBMods.DamagePopups.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkPopupEntity
	{
		public DisplayText displayText { get { return (DisplayText)GetComponent(EkPopupComponentsLookup.DisplayText); } }
		public bool hasDisplayText { get { return HasComponent(EkPopupComponentsLookup.DisplayText); } }

		public void AddDisplayText(string newText, int newSpriteIDBase, double newStartTime)
		{
			var index = EkPopupComponentsLookup.DisplayText;
			var component = (DisplayText)CreateComponent(index, typeof(DisplayText));
			component.text = newText;
			component.spriteIDBase = newSpriteIDBase;
			component.startTime = newStartTime;
			AddComponent(index, component);
		}

		public void ReplaceDisplayText(string newText, int newSpriteIDBase, double newStartTime)
		{
			var index = EkPopupComponentsLookup.DisplayText;
			var component = (DisplayText)CreateComponent(index, typeof(DisplayText));
			component.text = newText;
			component.spriteIDBase = newSpriteIDBase;
			component.startTime = newStartTime;
			ReplaceComponent(index, component);
		}

		public void RemoveDisplayText()
		{
			RemoveComponent(EkPopupComponentsLookup.DisplayText);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkPopupMatcher
	{
		static Entitas.IMatcher<EkPopupEntity> _matcherDisplayText;

		public static Entitas.IMatcher<EkPopupEntity> DisplayText
		{
			get
			{
				if (_matcherDisplayText == null)
				{
					var matcher = (Entitas.Matcher<EkPopupEntity>)Entitas.Matcher<EkPopupEntity>.AllOf(EkPopupComponentsLookup.DisplayText);
					matcher.componentNames = EkPopupComponentsLookup.componentNames;
					_matcherDisplayText = matcher;
				}

				return _matcherDisplayText;
			}
		}
	}
}
