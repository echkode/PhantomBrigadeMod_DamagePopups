namespace EchKode.PBMods.DamagePopups.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkPopupEntity
	{
		public Slot slot { get { return (Slot)GetComponent(EkPopupComponentsLookup.Slot); } }
		public bool hasSlot { get { return HasComponent(EkPopupComponentsLookup.Slot); } }

		public void AddSlot(int newI)
		{
			var index = EkPopupComponentsLookup.Slot;
			var component = (Slot)CreateComponent(index, typeof(Slot));
			component.i = newI;
			AddComponent(index, component);
		}

		public void ReplaceSlot(int newI)
		{
			var index = EkPopupComponentsLookup.Slot;
			var component = (Slot)CreateComponent(index, typeof(Slot));
			component.i = newI;
			ReplaceComponent(index, component);
		}

		public void RemoveSlot()
		{
			RemoveComponent(EkPopupComponentsLookup.Slot);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkPopupMatcher
	{
		static Entitas.IMatcher<EkPopupEntity> _matcherSlot;

		public static Entitas.IMatcher<EkPopupEntity> Slot
		{
			get
			{
				if (_matcherSlot == null)
				{
					var matcher = (Entitas.Matcher<EkPopupEntity>)Entitas.Matcher<EkPopupEntity>.AllOf(EkPopupComponentsLookup.Slot);
					matcher.componentNames = EkPopupComponentsLookup.componentNames;
					_matcherSlot = matcher;
				}

				return _matcherSlot;
			}
		}
	}
}
