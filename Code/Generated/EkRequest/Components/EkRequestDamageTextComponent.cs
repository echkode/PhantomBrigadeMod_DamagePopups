namespace EchKode.PBMods.DamagePopups.ECS
{
	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public partial class EkRequestEntity
	{
		public DamageText damageText { get { return (DamageText)GetComponent(EkRequestComponentsLookup.DamageText); } }
		public bool hasDamageText { get { return HasComponent(EkRequestComponentsLookup.DamageText); } }

		public void AddDamageText(float newValue, string newFormat)
		{
			var index = EkRequestComponentsLookup.DamageText;
			var component = (DamageText)CreateComponent(index, typeof(DamageText));
			component.value = newValue;
			component.format = newFormat;
			AddComponent(index, component);
		}

		public void ReplaceDamageText(float newValue, string newFormat)
		{
			var index = EkRequestComponentsLookup.DamageText;
			var component = (DamageText)CreateComponent(index, typeof(DamageText));
			component.value = newValue;
			component.format = newFormat;
			ReplaceComponent(index, component);
		}

		public void RemoveDamageText()
		{
			RemoveComponent(EkRequestComponentsLookup.DamageText);
		}
	}

	//------------------------------------------------------------------------------
	// <auto-generated>
	//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
	//
	//     Changes to this file may cause incorrect behavior and will be lost if
	//     the code is regenerated.
	// </auto-generated>
	//------------------------------------------------------------------------------
	public sealed partial class EkRequestMatcher
	{
		static Entitas.IMatcher<EkRequestEntity> _matcherDamageText;

		public static Entitas.IMatcher<EkRequestEntity> DamageText
		{
			get
			{
				if (_matcherDamageText == null)
				{
					var matcher = (Entitas.Matcher<EkRequestEntity>)Entitas.Matcher<EkRequestEntity>.AllOf(EkRequestComponentsLookup.DamageText);
					matcher.componentNames = EkRequestComponentsLookup.componentNames;
					_matcherDamageText = matcher;
				}

				return _matcherDamageText;
			}
		}
	}
}
